# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GcBFuEndehTVB0c1kL55d5jg_bc9ohOu

**LIBRARIES**
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

"""**READ FILE**"""

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/goodreads.xlsx")

"""**HEAD OF DATA**"""

df.head()

"""**SHAPE OF DATA**"""

df.shape

"""**INFORMATION OF DATA**"""

df.info()

"""**DESCRIBE**"""

df.describe()

"""**DUPLICATE CHECKING**"""

dups=df.duplicated()
print('Number of duplicates:%d'% (dups.sum()))
df[dups]

"""**REMOVING DUPLICATES**"""

df.drop_duplicates(inplace=True)

"""**RECHECKING DUPLICATES**"""

dups=df.duplicated()
print('Number of duplicates:%d'% (dups.sum()))
df[dups]

df.shape

"""**CHECK FOR OUTLINER**"""

df.boxplot(column='Book Id')
plt.show()

df.boxplot(column='ISBN13')
plt.show()

df.boxplot(column='My Rating')
plt.show()

df.boxplot(column='Average Rating')
plt.show()

df.boxplot(column='Number of Pages')
plt.show()

df.boxplot(column='Year Published')
plt.show()

df.boxplot(column='Original Publication Year')
plt.show()

df.boxplot(column='Read Count')
plt.show()

df.boxplot(column='Owned Copies')
plt.show()

"""**TREATING OUTLINERS**"""

def remove_outliner(col):
  sorted(col)
  Q1,Q3=col.quantile([0.25,0.75])
  IQR=Q3-Q1
  lower_range=Q1-(1.5*IQR)
  upper_range=Q3+(1.5*IQR)
  return lower_range,upper_range

lrbook_Id,urbook_Id=remove_outliner(df['Book Id'])
df['Book Id']=np.where(df['Book Id']<lrbook_Id,lrbook_Id,df['Book Id'])
df['Book Id']=np.where(df['Book Id']>urbook_Id,urbook_Id,df['Book Id'])

lrISBN13,urISBN13=remove_outliner(df['ISBN13'])
df['ISBN13']=np.where(df['ISBN13']<lrISBN13,lrISBN13,df['ISBN13'])
df['ISBN13']=np.where(df['ISBN13']>urISBN13,urISBN13,df['ISBN13'])

lrMy_Rating,urMy_Rating=remove_outliner(df['My Rating'])
df['My Rating']=np.where(df['My Rating']<lrMy_Rating,lrMy_Rating,df['My Rating'])
df['My Rating']=np.where(df['My Rating']>urMy_Rating,urMy_Rating,df['My Rating'])

lrAverage_Rating,urAverage_Rating=remove_outliner(df['Average Rating'])
df['Average Rating']=np.where(df['Average Rating']<lrAverage_Rating,lrAverage_Rating,df['Average Rating'])
df['Average Rating']=np.where(df['Average Rating']>urAverage_Rating,urAverage_Rating,df['Average Rating'])

lrNumber_of_Pages,urNumber_of_Pages=remove_outliner(df['Number of Pages'])
df['Number of Pages']=np.where(df['Number of Pages']<lrNumber_of_Pages,lrNumber_of_Pages,df['Number of Pages'])
df['Number of Pages']=np.where(df['Number of Pages']>urNumber_of_Pages,urNumber_of_Pages,df['Number of Pages'])

lrYear_Published,urYear_Published=remove_outliner(df['Year Published'])
df['Year Published']=np.where(df['Year Published']<lrYear_Published,lrYear_Published,df['Year Published'])
df['Year Published']=np.where(df['Year Published']>urYear_Published,urYear_Published,df['Year Published'])

lrOriginal_Publication_Year,urOriginal_Publication_Year=remove_outliner(df['Original Publication Year'])
df['Original Publication Year']=np.where(df['Original Publication Year']<lrOriginal_Publication_Year,lrOriginal_Publication_Year,df['Original Publication Year'])
df['Original Publication Year']=np.where(df['Original Publication Year']>urOriginal_Publication_Year,urOriginal_Publication_Year,df['Original Publication Year'])

lrRead_Count,urRead_Count=remove_outliner(df['Read Count'])
df['Read Count']=np.where(df['Read Count']<lrRead_Count,lrRead_Count,df['Read Count'])
df['Read Count']=np.where(df['Read Count']>urRead_Count,urRead_Count,df['Read Count'])

lrOwned_Copies,urOwned_Copies=remove_outliner(df['Owned Copies'])
df['Owned Copies']=np.where(df['Owned Copies']<lrOwned_Copies,lrOwned_Copies,df['Owned Copies'])
df['Owned Copies']=np.where(df['Owned Copies']>urOwned_Copies,urOwned_Copies,df['Owned Copies'])
df.shape

"""**RECHECKING OUTLINER**"""

df.boxplot(column='Book Id')
plt.show()

df.boxplot(column='ISBN13')
plt.show()

df.boxplot(column='My Rating')
plt.show()

df.boxplot(column='Average Rating')
plt.show()

df.boxplot(column='Number of Pages')
plt.show()

df.boxplot(column='Year Published')
plt.show()

df.boxplot(column='Original Publication Year')
plt.show()

df.boxplot(column='Read Count')
plt.show()

df.boxplot(column='Owned Copies')
plt.show()

"""**CHECKING MISSING VALUE**"""

df.isnull().sum()

"""**Replacing With Median Value**"""

df[df.isnull().sum()[df.isnull().sum()>0].index].dtypes

"""**REPLACING NUMERICAL VALUE USING MEDIAN**"""

median1=df["ISBN13"].median()
median2=df["Number of Pages"].median()
median3=df["Year Published"].median()
median4=df["Original Publication Year"].median()

df["ISBN13"].replace(np.nan,median1,inplace=True)
df["Number of Pages"].replace(np.nan,median2,inplace=True)
df["Year Published"].replace(np.nan,median3,inplace=True)
df["Original Publication Year"].replace(np.nan,median4,inplace=True)

mode1=df["Additional Authors"].mode().values[0]
mode2=df["ISBN"].mode().values[0]
mode3=df["Publisher"].mode().values[0]
mode4=df["Binding"].mode().values[0]
mode5=df["Date Read"].mode().values[0]
mode6=df["Bookshelves"].mode().values[0]
mode7=df["Bookshelves with positions"].mode().values[0]
mode8=df["My Review"].mode().values[0]
mode9=df["Spoiler"].mode().values[0]
mode10=df["Private Notes"].mode().values[0]

df["Additional Authors"].replace(np.nan,mode1,inplace=True)
df["ISBN"].replace(np.nan,mode2,inplace=True)
df["Publisher"].replace(np.nan,mode3,inplace=True)
df["Binding"].replace(np.nan,mode4,inplace=True)
df["Date Read"].replace(np.nan,mode5,inplace=True)
df["Bookshelves"].replace(np.nan,mode6,inplace=True)
df["Bookshelves with positions"].replace(np.nan,mode7,inplace=True)
df["My Review"].replace(np.nan,mode8,inplace=True)
df["Spoiler"].replace(np.nan,mode9,inplace=True)
df["Private Notes"].replace(np.nan,mode10,inplace=True)

"""**RECHECKING MISSING VALUES**"""

df.isnull().sum()

"""**UNIVARIATE ANALLYSIS**"""

sns.histplot(df.ISBN13,kde=True)

sns.histplot(df["My Rating"],kde=True)

sns.histplot(df["Average Rating"],kde=True)

sns.histplot(df["Number of Pages"],kde=True)

sns.histplot(df["Year Published"],kde=True)

sns.histplot(df["Original Publication Year"],kde=True)

sns.histplot(df["Date Read"],kde=True)

sns.histplot(df["Date Added"],kde=True)

sns.histplot(df["Read Count"],kde=True)

sns.histplot(df["Owned Copies"],kde=True)

"""**BIVARIATE ANALYSIS**"""

sns.pairplot(df)
plt.show()

df.corr(numeric_only=True)

"""**CORRELATION HEATMAP**"""

plt.figure(figsize=(12,7))
sns.heatmap(df.corr(numeric_only=True),annot=True,fmt='.2f', cmap='Greens')
plt.show()

"""**NORMALIZATION AND STANDARDIZATION**"""

from sklearn.preprocessing import StandardScaler
std_scale=StandardScaler()
std_scale

cols_to_scale = ["My Rating","Average Rating","Number of Pages","Year Published","Original Publication Year","Read Count","Owned Copies"]
for col in cols_to_scale:
    df[col] = std_scale.fit_transform(df[[col]])

df.head()

"""**ENCODING**"""

columns=["Title", "Author", "Author l-f", "Additional Authors", "ISBN","Publisher", "Binding", "Date Read", "Date Added", "Bookshelves",
"Bookshelves with positions", "Exclusive Shelf", "My Review","Spoiler", "Private Notes"]
dummies=pd.get_dummies(df[columns], drop_first=True)
df=pd.concat([df, dummies], axis=1)
df.drop(columns, axis=1, inplace=True)

df.head()